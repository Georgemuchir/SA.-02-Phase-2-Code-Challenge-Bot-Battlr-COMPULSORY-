{"ast":null,"code":"import React,{useState,useEffect}from'react';import BotCollection from'./BotCollection';import YourBotArmy from'./YourBotArmy';import'./App.css';// Optional: if you have App-specific styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[bots,setBots]=useState([]);const[army,setArmy]=useState([]);useEffect(()=>{fetch(\"http://localhost:8001/bots\").then(res=>res.json()).then(data=>setBots(data));},[]);const addToArmy=bot=>{if(!army.some(armyBot=>armyBot.id===bot.id)){setArmy([...army,bot]);}};const removeFromArmy=bot=>{setArmy(army.filter(armyBot=>armyBot.id!==bot.id));};const dischargeBot=id=>{fetch(`http://localhost:8001/bots/${id}`,{method:\"DELETE\"}).then(()=>{setBots(bots.filter(bot=>bot.id!==id));setArmy(army.filter(bot=>bot.id!==id));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(YourBotArmy,{army:army,removeFromArmy:removeFromArmy,dischargeBot:dischargeBot}),/*#__PURE__*/_jsx(BotCollection,{bots:bots,addToArmy:addToArmy})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsx","_jsx","jsxs","_jsxs","App","bots","setBots","army","setArmy","fetch","then","res","json","data","addToArmy","bot","some","armyBot","id","removeFromArmy","filter","dischargeBot","method","children"],"sources":["/home/george/Development/code/phase2/SA.-02-Phase-2-Code-Challenge-Bot-Battlr-COMPULSORY-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport './App.css'; // Optional: if you have App-specific styles\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\")\n      .then((res) => res.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const addToArmy = (bot) => {\n    if (!army.some((armyBot) => armyBot.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  const removeFromArmy = (bot) => {\n    setArmy(army.filter((armyBot) => armyBot.id !== bot.id));\n  };\n\n  const dischargeBot = (id) => {\n    fetch(`http://localhost:8001/bots/${id}`, { method: \"DELETE\" })\n      .then(() => {\n        setBots(bots.filter((bot) => bot.id !== id));\n        setArmy(army.filter((bot) => bot.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <YourBotArmy army={army} removeFromArmy={removeFromArmy} dischargeBot={dischargeBot} />\n      <BotCollection bots={bots} addToArmy={addToArmy} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,WAAW,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEpCC,SAAS,CAAC,IAAM,CACdY,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAClC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAIC,GAAG,EAAK,CACzB,GAAI,CAACR,IAAI,CAACS,IAAI,CAAEC,OAAO,EAAKA,OAAO,CAACC,EAAE,GAAKH,GAAG,CAACG,EAAE,CAAC,CAAE,CAClDV,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAEQ,GAAG,CAAC,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAAI,cAAc,CAAIJ,GAAG,EAAK,CAC9BP,OAAO,CAACD,IAAI,CAACa,MAAM,CAAEH,OAAO,EAAKA,OAAO,CAACC,EAAE,GAAKH,GAAG,CAACG,EAAE,CAAC,CAAC,CAC1D,CAAC,CAED,KAAM,CAAAG,YAAY,CAAIH,EAAE,EAAK,CAC3BT,KAAK,CAAC,8BAA8BS,EAAE,EAAE,CAAE,CAAEI,MAAM,CAAE,QAAS,CAAC,CAAC,CAC5DZ,IAAI,CAAC,IAAM,CACVJ,OAAO,CAACD,IAAI,CAACe,MAAM,CAAEL,GAAG,EAAKA,GAAG,CAACG,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC5CV,OAAO,CAACD,IAAI,CAACa,MAAM,CAAEL,GAAG,EAAKA,GAAG,CAACG,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC9C,CAAC,CAAC,CACN,CAAC,CAED,mBACEf,KAAA,QAAAoB,QAAA,eACEtB,IAAA,CAACF,WAAW,EAACQ,IAAI,CAAEA,IAAK,CAACY,cAAc,CAAEA,cAAe,CAACE,YAAY,CAAEA,YAAa,CAAE,CAAC,cACvFpB,IAAA,CAACH,aAAa,EAACO,IAAI,CAAEA,IAAK,CAACS,SAAS,CAAEA,SAAU,CAAE,CAAC,EAChD,CAAC,CAEV,CAEA,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}